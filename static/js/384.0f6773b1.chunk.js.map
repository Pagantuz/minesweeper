{"version":3,"file":"static/js/384.0f6773b1.chunk.js","mappings":"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","sources":["modules/GameFormModule/utils/generateRules.ts","webpack://minesweeper/./src/modules/GameFormModule/components/Form/styles.module.css?13a1","modules/GameFormModule/components/Form/GameForm.tsx","webpack://minesweeper/./src/modules/GameFormModule/components/FormContainer/styles.module.css?b793","modules/GameFormModule/components/FormContainer/FormContainer.tsx","modules/GameFormModule/GameFormModule.tsx","pages/FormPage/FormPage.tsx"],"sourcesContent":["import { Rule } from 'antd/es/form';\r\n\r\nconst rules: Record<string, (message?: string, ...args: any[]) => Rule> = {\r\n  required: (message = 'Обязательно для заполнения') => ({\r\n    required: true,\r\n    message: message\r\n  }),\r\n  max: (message = 'Слишком много', max) => ({\r\n    max,\r\n    message\r\n  }),\r\n  min: (message = 'Слишком мало', min) => ({\r\n    min,\r\n    message\r\n  })\r\n};\r\n\r\nexport { rules };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__B5Vsh\"};","import {\r\n  Button,\r\n  ConfigProvider,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Select,\r\n  Space\r\n} from 'antd';\r\nimport { ROUTES } from 'constants/routes';\r\nimport { TFormValues } from 'modules/GameFormModule/types/FormValues';\r\nimport { rules } from 'modules/GameFormModule/utils/generateRules';\r\nimport { TDifficulty, useGameStore } from 'modules/GameModule';\r\nimport { useIsMobile } from 'modules/GameModule/hooks/useIsMobile';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Head } from 'UI/Head';\r\nimport styles from './styles.module.css';\r\n\r\nconst GameForm: React.FC = () => {\r\n  const [selectDifficulty, setSelectDifficulty] = React.useState<TDifficulty>();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const setUsername = useGameStore((state) => state.setUsername);\r\n  const setCustomDifficulty = useGameStore(\r\n    (state) => state.setCustomDifficulty\r\n  );\r\n  const setDifficulty = useGameStore((state) => state.setDifficulty);\r\n  const generateGame = useGameStore((state) => state.generateGame);\r\n\r\n  const isMobile = useIsMobile();\r\n\r\n  const onFinish = (values: TFormValues) => {\r\n    if (values.difficulty === 'custom') {\r\n      setCustomDifficulty([values.rows, values.columns], values.mines);\r\n    } else {\r\n      setDifficulty(values.difficulty);\r\n    }\r\n    setUsername(values.username);\r\n    generateGame();\r\n    navigate(ROUTES.GAME, { replace: true });\r\n  };\r\n\r\n  const goToLeaderboard = () => {\r\n    navigate(ROUTES.LEADERBOARD);\r\n  };\r\n\r\n  const isCustom = selectDifficulty === 'custom';\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Head title='Сапёр' />\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        name='game-form'\r\n        onFinish={onFinish}>\r\n        <Form.Item\r\n          name='username'\r\n          label='Имя пользователя'\r\n          rules={[\r\n            rules.required(),\r\n            rules.min('Минимум 4 символа', 4),\r\n            rules.max('Максимум 10 символов', 10)\r\n          ]}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='difficulty'\r\n          label='Сложность'\r\n          rules={[rules.required()]}>\r\n          <Select onChange={setSelectDifficulty}>\r\n            <Select.Option key='easy' value='easy'>\r\n              Лёгкая\r\n            </Select.Option>\r\n            <Select.Option key='medium' value='medium'>\r\n              Средняя\r\n            </Select.Option>\r\n            <Select.Option key='hard' value='hard'>\r\n              Тяжелая\r\n            </Select.Option>\r\n            <Select.Option key='custom' value='custom'>\r\n              Пользовательская\r\n            </Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        {isCustom && (\r\n          <>\r\n            <Form.Item\r\n              name='mines'\r\n              label='Количество мин'\r\n              rules={[rules.required()]}>\r\n              <InputNumber min={1} max={999} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='rows'\r\n              label='Высота поля'\r\n              rules={[rules.required()]}>\r\n              <InputNumber min={8} max={99} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name='columns'\r\n              label='Ширина поля'\r\n              rules={[rules.required()]}>\r\n              <InputNumber min={8} max={99} />\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n        <Form.Item\r\n          wrapperCol={\r\n            isMobile ? { offset: 0, span: 8 } : { offset: 8, span: 8 }\r\n          }>\r\n          <Space>\r\n            <Button block type='primary' htmlType='submit'>\r\n              Начать игру\r\n            </Button>\r\n            <Button block type='default' onClick={goToLeaderboard}>\r\n              На страницу лидеров\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { GameForm };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"styles_container__U3uwI\"};","import React from 'react';\r\nimport styles from './styles.module.css';\r\n\r\ntype FormContainerProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst FormContainer: React.FC<FormContainerProps> = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport { FormContainer };\r\n","import React from 'react';\r\nimport { GameForm } from './components/Form';\r\nimport { FormContainer } from './components/FormContainer';\r\n\r\nconst GameFormModule: React.FC = () => {\r\n  return (\r\n    <FormContainer>\r\n      <GameForm />\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport { GameFormModule };\r\n","import { GameFormModule } from 'modules/GameFormModule';\r\nimport React from 'react';\r\n\r\nconst FormPage: React.FC = () => {\r\n  return <GameFormModule />;\r\n};\r\n\r\nexport { FormPage };\r\n"],"names":["rules","required","message","arguments","length","undefined","max","min","GameForm","_React$useState","React","_React$useState2","_slicedToArray","selectDifficulty","setSelectDifficulty","navigate","useNavigate","setUsername","useGameStore","state","setCustomDifficulty","setDifficulty","generateGame","isMobile","useIsMobile","isCustom","_jsxs","className","styles","children","_jsx","Head","title","Form","labelCol","span","wrapperCol","name","onFinish","values","difficulty","rows","columns","mines","username","ROUTES","replace","label","Input","Select","onChange","value","_Fragment","InputNumber","offset","Space","Button","block","type","htmlType","onClick","FormContainer","_ref","GameFormModule","FormPage"],"sourceRoot":""}